// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using t02_ShopCMS.Data;

#nullable disable

namespace t02_ShopCMS.Migrations
{
    [DbContext(typeof(t02_ShopCMSContext))]
    [Migration("20240830083114_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("t02_ShopCMS.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("類別編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("類別名稱");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("t02_ShopCMS.Entity.OrderList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("下單編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasComment("下單商品數量");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("下單商品類別");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("下單時間");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("下單商品名稱");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderList", (string)null);
                });

            modelBuilder.Entity("t02_ShopCMS.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("產品序號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanOrder")
                        .HasColumnType("bit")
                        .HasComment("產品是否上架");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("產品內容");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("產品新增時間");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("產品說明");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasComment("產品圖片");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("產品名稱");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("產品價格");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasComment("產品庫存");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("t02_ShopCMS.Entity.ShipmentList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("出貨編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasComment("出貨商品數量");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2")
                        .HasComment("出貨時間");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("出貨商品名稱");

                    b.Property<string>("ShipNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("出貨商品編號");

                    b.HasKey("Id");

                    b.ToTable("ShipmentList", (string)null);
                });

            modelBuilder.Entity("t02_ShopCMS.Entity.OrderList", b =>
                {
                    b.HasOne("t02_ShopCMS.Entity.Product", "Product")
                        .WithMany("OrderLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_ShipmentList");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("t02_ShopCMS.Entity.Product", b =>
                {
                    b.HasOne("t02_ShopCMS.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("t02_ShopCMS.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("t02_ShopCMS.Entity.Product", b =>
                {
                    b.Navigation("OrderLists");
                });
#pragma warning restore 612, 618
        }
    }
}

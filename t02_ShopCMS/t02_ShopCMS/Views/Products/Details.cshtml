@model t02_ShopCMS.Models.DetailViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="row">
    <div class="col-md-12 row form-container">
        <h4>產品資訊</h4>
        @*//圖片*@
        <div class="col-md-4 me-3">
            <img class="img-fluid d-block product-image" src="@Html.DisplayFor(model => model.Imgsrc)" />    
        </div>
        
        <div class="col-md-8 row">
            <div class="col-md-6 mb-1">
                @*//名稱*@
                <p class="detail-title m-0">
                    產品名稱:
                </p>
                <p>
                    @Html.DisplayFor(model => model.Product.Name)
                </p>
            </div>
            <div class="col-md-6 mb-1">
                @*//類別*@
                <p class="detail-title m-0">
                    產品類別:
                </p>
                <p>
                    @Html.DisplayFor(model => model.Product.Name)
                </p>
            </div>
            @*//價格*@
            <div class="col-md-6 mb-1">
                <p class="detail-title m-0">
                    價格:
                </p>
                <p>
                    @Html.DisplayFor(model => model.Product.Price)
                </p>
            </div>
            @*//庫存*@
            <div class="col-md-6 mb-1">
                <p class="detail-title m-0">
                    庫存:
                </p>
                <p>
                    @Html.DisplayFor(model => model.Product.Stock)
                </p>
            </div>
            @*//簡介*@
            <p class="detail-title m-0">
                產品簡介:
            </p>
            <p>
                @Html.DisplayFor(model => model.Product.Description)  
            </p>
            @*//內容*@
            <p class="detail-title m-0">
                產品內容:
            </p>
            <p>
                @Html.Raw(Model.Product.Content)
            </p>
        </div>
        <div class="col-md form-group">
            <form asp-action="Edit" asp-route-id="@Model.Product.Id">
                <button type="submit" class="btn submit-btn">編輯產品</button>
            </form>
            <form method="post" id="deleteForm">
                @Html.AntiForgeryToken()
                <input type="hidden" id="Id" value="@Model.Product.Id" />
                <input type="submit" value="刪除產品" class="delete-btn btn btn-danger me-2" data-id="@Model.Product.Id" />
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $('.delete-btn').on('click', function (e) {
            e.preventDefault();

            const id = $(this).attr('data-id');
            const token = $('input[name="__RequestVerificationToken"]').val();

            swal.fire({
                title: '您的產品即將被刪除',
                text: '產品刪除後將無法復原，請問您是否要刪除產品?',
                icon: 'warning',
                confirmButtonText: '確定',
                cancelButtonText: '取消',
                showCancelButton: true,
                closeModal: false,
                allowOutsideClick: false,
                closeOnConfirm: false,
                closeOnCancel: false,
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteData(id, token);
                } else {
                    swal.fire({ title: "產品已被取消刪除" });
                }
            });
        });

        function deleteData(id, token) {
            fetch(`/Products/Delete?id=${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        swal.fire({
                            title: "您的產品已被刪除",
                            icon: "success",
                        }).then(() => {
                            window.location.href = '/';
                        });
                    } else {
                        swal.fire({
                            title: "Error occurred while deleting your product.",
                            icon: "error",
                        });
                    }
                })
                .catch(error => {
                    swal.fire({
                        title: "Error occurred: " + error.message,
                        icon: "error",
                    });
                });
        }
    </script>
}